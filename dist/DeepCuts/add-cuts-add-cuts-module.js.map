{"version":3,"sources":["webpack:///./src/app/add-cuts/add-cuts.component.css","webpack:///./src/app/add-cuts/add-cuts.component.html","webpack:///./src/app/add-cuts/add-cuts.component.ts","webpack:///./src/app/add-cuts/add-cuts.module.ts"],"names":[],"mappings":"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","file":"add-cuts-add-cuts-module.js","sourcesContent":["module.exports = \"#addCutsGrid{\\r\\n    display: -ms-grid;\\r\\n    display: grid;\\r\\n        grid-template-areas: \\\". lastfmsearch  addcuts .\\\";\\r\\n    -ms-grid-rows: auto;\\r\\n    grid-template-rows: auto;\\r\\n    -ms-grid-columns:  1fr 55px  1fr;\\r\\n    grid-template-columns:  1fr  1fr;\\r\\n    grid-column-gap: 55px;\\r\\n}\\r\\n\\r\\n#lastfmSearchWrapper form{\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    -ms-grid-row: 1;\\r\\n    -ms-grid-column: 3;\\r\\n    grid-area: lastfmsearch;\\r\\n}\\r\\n\\r\\n#lastfmSearchWrapper{\\r\\n    margin-left: 30px;\\r\\n    max-width: 400px;\\r\\n}\\r\\n\\r\\n#addCutsMainWrapper form{\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    -ms-grid-row: 1;\\r\\n    -ms-grid-column: 5;\\r\\n    grid-area: addcuts;\\r\\n}\\r\\n\\r\\n.listOption{\\r\\n    display: flex;\\r\\n}\\r\\n\\r\\n.listOption img{\\r\\n    border-radius: 50%;\\r\\n}\\r\\n\\r\\n.details{\\r\\n    margin-left:25px;\\r\\n    margin-top:21px;\\r\\n}\\r\\n\\r\\n.mat-list .mat-list-item, .mat-list .mat-list-option, .mat-nav-list .mat-list-item, .mat-nav-list .mat-list-option, .mat-selection-list .mat-list-item, .mat-selection-list .mat-list-option {\\r\\n    display: block;\\r\\n    height: 75px;\\r\\n}\"","module.exports = \"<div id=\\\"addCutsGrid\\\">\\n  <div id=\\\"lastfmSearchWrapper\\\"> \\n    <h1>Add Cuts</h1>\\n    <app-last-fm-search (trackSelectionEvent)=\\\"recieveTrack($event)\\\"></app-last-fm-search>\\n  </div>\\n\\n  <div id=\\\"addCutsMainWrapper\\\">\\n    <h2>Track Details</h2>\\n      <form [formGroup] = \\\"addCutForm\\\">\\n          <mat-form-field id=\\\"artist\\\">\\n            <input matInput formControlName=\\\"ArtistName\\\" type=\\\"text\\\" placeholder=\\\"Enter Artist Name\\\" >\\n          </mat-form-field>\\n    \\n          <mat-form-field id=\\\"track\\\">\\n            <input matInput formControlName=\\\"TrackName\\\" type=\\\"text\\\" placeholder=\\\"Enter Track Name\\\" >\\n          </mat-form-field>\\n\\n          <mat-form-field id=\\\"album\\\">\\n              <input matInput formControlName=\\\"AlbumName\\\" type=\\\"text\\\" placeholder=\\\"Enter Album Name\\\" >\\n          </mat-form-field>\\n  \\n          <mat-form-field id=\\\"year\\\">\\n              <input matInput formControlName=\\\"Release\\\" type=\\\"text\\\" placeholder=\\\"Enter Release Year\\\" >\\n          </mat-form-field>\\n\\n          <mat-form-field class=\\\"genre-chip-list\\\">\\n              <mat-chip-list #genreChipList>\\n                <mat-chip *ngFor=\\\"let genre of genres\\\" [selectable]=\\\"false\\\"\\n                         [removable]=\\\"removable\\\" (removed)=\\\"removeGenre(genre)\\\">\\n                  {{genre.name}}\\n                  <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\n                </mat-chip>\\n                <input placeholder=\\\"Add Genre...\\\"\\n                       [matChipInputFor]=\\\"genreChipList\\\"\\n                       [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n                       [matChipInputAddOnBlur]=\\\"true\\\"\\n                       (matChipInputTokenEnd)=\\\"addGenre($event)\\\">\\n              </mat-chip-list>\\n            </mat-form-field>\\n\\n            <mat-form-field class=\\\"tag-chip-list\\\">\\n                <mat-chip-list #tagChipList>\\n                  <mat-chip *ngFor=\\\"let tag of tags\\\" [selectable]=\\\"false\\\"\\n                           [removable]=\\\"removable\\\" (removed)=\\\"removeTag(tag)\\\">\\n                    {{tag.name}}\\n                    <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\n                  </mat-chip>\\n                  <input placeholder=\\\"Add Tag...\\\"\\n                         [matChipInputFor]=\\\"tagChipList\\\"\\n                         [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\n                         [matChipInputAddOnBlur]=\\\"true\\\"\\n                         (matChipInputTokenEnd)=\\\"addTag($event)\\\">\\n                </mat-chip-list>\\n              </mat-form-field>\\n\\n          <mat-form-field id=\\\"description\\\">\\n              <textarea matInput formControlName=\\\"Description\\\" type=\\\"text\\\" placeholder=\\\"Write a comment...\\\" ></textarea>\\n          </mat-form-field>\\n\\n          <div class=\\\"albumArt\\\">\\n            <img src=\\\"{{albumArt}}\\\">\\n          </div>\\n\\n          <button mat-raised-button (click)=\\\"addCut()\\\" >Submit</button>\\n      </form>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { LastfmService } from '../lastfm/lastfm.service';\nimport { TrackService } from '../firebase-services/track-service.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Track } from '../lastfm/lastfm.interface';\nimport {COMMA, ENTER} from '@angular/cdk/keycodes';\nimport { MatChipInputEvent, MatSelectionList, MatSelectionListChange } from '@angular/material';\nimport { FireBaseTrack, Genre, Tag } from '../interfaces';\n\n\n@Component({\n  selector: 'app-add-cuts',\n  templateUrl: './add-cuts.component.html',\n  styleUrls: ['./add-cuts.component.css']\n})\nexport class AddCutsComponent implements OnInit {\n\n  readonly separatorKeysCodes: number[] = [ENTER, COMMA];\n\n\n\n  addCutForm: FormGroup;\n  suggestedTrackList: Track[];\n  removable = true;\n  genres: Genre[] = [];\n  tags: Tag[] = [];\n  albumArt: string;\n\n\n  constructor(private trackService: TrackService,\n              private fb: FormBuilder) { }\n\n  ngOnInit() {\n\n    this.addCutForm = this.fb.group({\n      ArtistName: ['', Validators.required],\n      TrackName: ['', Validators.required],\n      AlbumName: ['', Validators.required],\n      Tag: [[], Validators.required],\n      Genre: [[], Validators.required],\n      Release: ['', Validators.required],\n      Description: ['', Validators.required],\n    });\n  }\n\n\n  setFormWithTrackData(track) {\n    this.tags = [];\n    track.toptags.tag.forEach(tag => {\n      this.tags.push(tag);\n    });\n\n    if (track.album === undefined) {\n      track.album = {};\n      track.album.title = '';\n      track.album.image = {'#text': '' };\n      this.albumArt = '';\n    } else {\n      this.albumArt = track.album.image[3]['#text'];\n    }\n\n    this.addCutForm.setValue({\n      ArtistName: track.artist.name,\n      TrackName: track.name,\n      AlbumName: track.album.title,\n      Genre: this.genres,\n      Tag: this.tags,\n      Description: '',\n      Release: '',\n    });\n  }\n\n  recieveTrack($event) {\n    this.setFormWithTrackData($event);\n  }\n\n  addCut()  {\n    const formValue = this.addCutForm.value;\n\n    const newCut: FireBaseTrack = {\n      Artist: formValue.ArtistName,\n      Album: formValue.AlbumName,\n      AlbumArt: this.albumArt,\n      Track: formValue.TrackName,\n      Description: formValue.Description,\n      Release: formValue.Release,\n      Genre: this.genres,\n      Tags: this.tags,\n      CutRating: 0,\n      DeepRating: 0,\n    };\n\n    this.trackService.createTrack(newCut);\n\n  }\n\n  addGenre(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    if ((value || '').trim()) {\n      this.genres.push({name: value.trim()});\n    }\n\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  removeGenre(genre: Genre): void {\n    const index = this.genres.indexOf(genre);\n\n    if (index >= 0) {\n      this.genres.splice(index, 1);\n    }\n  }\n\n  addTag(event: MatChipInputEvent): void {\n    const input = event.input;\n    const value = event.value;\n\n    if ((value || '').trim()) {\n      this.tags.push({name: value.trim()});\n    }\n\n    if (input) {\n      input.value = '';\n    }\n  }\n\n  removeTag(tag: Tag): void {\n    const index = this.tags.indexOf(tag);\n\n    if (index >= 0) {\n      this.tags.splice(index, 1);\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AddCutsComponent } from './add-cuts.component';\nimport { AngMaterialModule } from '../ang-material/ang-material.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CoreServicesModule } from '../core-services/core-services.module';\nimport { LastFmSearchModule } from '../lastfm/last-fm-search/last-fm-search.module';\n\n\nconst routes: Routes = [\n  {path: '', component: AddCutsComponent}\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    AngMaterialModule,\n    ReactiveFormsModule,\n    CoreServicesModule,\n    LastFmSearchModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [RouterModule],\n  declarations: [AddCutsComponent],\n})\nexport class AddCutsModule { }\n"],"sourceRoot":""}